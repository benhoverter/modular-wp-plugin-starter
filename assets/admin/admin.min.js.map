{"version":3,"sources":["module-ajax/js/view-name.js","settings/js/view-name.js","module/js/view-name.js"],"names":["$","document","ready","bindHandler","click","event","preventDefault","this","confirm","ajax","method","url","ajaxurl","data","action","ajax_nonce","data_package_name","module_ajax_data_nonce","data_1","data_2","beforeSend","regHeight","height","fadeOut","success","html","status","jqXHR","fadeIn","css","body","trigger","console","log","on","$inputs","setSessionMats","sessionMats","serialize","sessionStorage","setItem","off","keyup","keycode","currentMats","parents","first","find","$button","getItem","removeClass","removeAttr","addClass","attr","$table","materials","cache","ce_admin_ajax_data","event_materials","result","error","compareMatsToSession","jQuery"],"mappings":"cAUA,SAAAA,GAIAA,EAAAC,UAAAC,MAAA,WAgBA,SAAAC,IACAH,EAAA,cAAAI,MAAA,SAAAC,GAEAA,EAAAC,iBAEAN,EAAAO,MAMA,IAAA,IAFAC,QAAA,qCAEA,CAKAR,EAAA,IAeAA,EAAAS,KAAA,CACAC,OAAA,OACAC,IAAAC,QACAC,KACA,CACAC,OAAA,cACAC,WAAAC,kBAAAC,uBACAC,OAAA,kBACAC,OAAA,wBAGAC,WAAA,WAGA,IAAAC,EAAArB,EAAA,mBAAAsB,SAGAtB,EAAA,mBAAAsB,OAAAD,GAGArB,EAAA,aAAAuB,QAAA,SAIAC,QAAA,SAAAC,EAAAC,EAAAC,GAMA3B,EAAA,aAAAyB,KAAAA,GACAzB,EAAA,aAAA4B,OAAA,QAGA5B,EAAA,mBAAA6B,IAAA,SAAA,QAGA7B,EAAAC,SAAA6B,MAAAC,QAAA,mBAnFAC,QAAAC,IAAA,sCAMA9B,IAGAH,EAAAC,SAAA6B,MAAAI,GAAA,YAAA,WACA/B,MAsFA,IAeAgC,EAfAA,EAAAnC,EAAA,gCAKA,SAAAoC,EAAAD,GAEA,IAAAE,EAAAF,EAAAG,YAEAC,eAAAC,QAAA,cAAAH,GARAD,EAAAD,IAcAA,EAbAA,GAkBAM,IAAA,QAAA,oBAKAN,EAAAO,MAAA,SAAAC,GAEA,IAAAA,GAoBA,SAAAR,GAEA,IAAAS,EAAAT,EAAAU,QAAA,SAAAC,QAAAC,KAAA,SACAH,EAAAA,EAAAN,YAEA,IAoBAU,EApBAX,EAAAE,eAAAU,QAAA,eAEAD,EAAAhD,EAAAmC,GAAAU,QAAA,WAAAC,QAAAC,KAAA,kCAIAH,IAAAP,EACAW,EAuCAE,YAAA,SAAAC,WAAA,QAAAV,IAAA,WA1BAO,EATAA,GAYAI,SAAA,SAAAC,KAAA,OAAA,KAGAL,EAAAP,IAAA,SAIAO,EAAA5C,MAAA,SAAAC,GAEAA,EAAAC,iBAEA,IAiBAgD,EAIAC,EArBAD,EAAAtD,EAAAO,MAAAsC,QAAA,WAAAC,QAAAC,KAAA,SAqBAQ,EAAAvD,EAJAsD,EAdAA,GAkBAP,KAAA,SAAAT,YAGAtC,EAAAS,KAAA,CACAC,OAAA,OACAC,IAAAC,QACA4C,OAAA,EACA3C,KACA,CACAC,OAAA,WACAC,WAAA0C,mBAAA1C,WACA2C,gBAAAH,GAGAnC,WAAA,WAEApB,EAAA,qCAAAuB,QAAA,SAIAC,QAAA,SAAAmC,EAAAjC,EAAAC,GAGA3B,EAAA,qCAAAyB,KAAAkC,GAAA/B,OAAA,QAGA5B,EAAA,mDAAAkD,YAAA,SAAAC,WAAA,QAAAV,IAAA,SAIAL,EAAAkB,GAGAtD,EAAAC,SAAA6B,MAAAC,QAAA,cAIA6B,MAAA,SAAAjC,EAAAD,EAAAkC,GAEA5D,EAAA,qCAAAyB,KAAA,0BAAAG,OAAA,cArHAiC,CAAA1B,KAcAA,EAAAiB,SAAA,eAhJA,CAqQAU,QC3PAA,OAPA7D,UAAAC,MAAA,WACA8B,QAAAC,IAAA,mCCMA6B,OAPA7D,UAAAC,MAAA,WACA8B,QAAAC,IAAA","file":"admin.min.js","sourcesContent":["/**\r\n * JS for: admin/module-ajax/views/view-name.php.\r\n *\r\n * @link       http://example.com\r\n * @since      1.0.0\r\n *\r\n * @package    plugin-name\r\n * @subpackage plugin-name/admin/module-ajax/js\r\n */\r\n\r\n( function($) {\r\n\r\n    'use strict';\r\n\r\n    $( document ).ready( function() {\r\n        console.log( \"Module-Ajax's view-name.js loaded.\" );\r\n\r\n        // Do the thing.\r\n\r\n\r\n        // Bind the event handler to the delete button:\r\n        bindHandler();\r\n\r\n        // Rebind all handlers on Ajax finish:\r\n        $( document.body ).on( 'post-load', function() {\r\n            bindHandler();\r\n        } );\r\n\r\n\r\n        // Handler-binder for a button:\r\n        function bindHandler() {\r\n            $( '#button-id' ).click( function( event ) {\r\n\r\n                event.preventDefault();\r\n\r\n                var $this = $( this );\r\n\r\n                // Select the html you need on event here.\r\n\r\n                var confirmed = confirm( \"Are you sure you want to do that?\" );\r\n\r\n                if ( confirmed === true ) {\r\n\r\n                    //console.log( \"Click confirmed.\" );\r\n\r\n                    // Select html to pass to the AJAX callback here.\r\n                    var ajaxInput = $( \"\" );\r\n\r\n                    // This is the Ajax call:\r\n                    ajaxFunction( ajaxInput );\r\n\r\n                    //console.log( \"ajaxInput is \" + ajaxInput + \".\" );\r\n\r\n                }\r\n            });\r\n        } // END OF: bindHandler().\r\n\r\n\r\n        // Define an ajax function:\r\n        function ajaxFunction( ajaxInput ) {\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: ajaxurl, // Should be available as a global on the admin side.\r\n                data:\r\n                {\r\n                        action: 'action_name',  // Same as in wp_ajax_{action_name}().\r\n                        ajax_nonce: data_package_name.module_ajax_data_nonce,\r\n                        data_1: \"Your data here.\",\r\n                        data_2: \"Your data here, too.\"\r\n                },\r\n\r\n                beforeSend: function() {\r\n\r\n                    // Get the current height of #current-user-registration-info.\r\n                    var regHeight = $( '#outer-frame-id' ).height();\r\n\r\n                    // Set the CSS height to that value to preserve element position.\r\n                    $( '#outer-frame-id' ).height( regHeight );\r\n\r\n                    // Pretty fade out.\r\n                    $( '#frame-id' ).fadeOut( 'fast' );\r\n\r\n                },\r\n\r\n                success: function( html, status, jqXHR ) {\r\n\r\n                    //console.log( \"AJAX returned HTML of: \" + html );\r\n                    //console.log( \"AJAX returned a status of: \" + status + \".\" );\r\n                    //console.log( \"AJAX returned a jqXHR object of: \" + jqXHR + \".\" );\r\n\r\n                    $( '#frame-id' ).html( html ); // Use the AJAX return value as the HTML content\r\n                    $( '#frame-id' ).fadeIn( 'fast' ); // Pretty fade in.\r\n\r\n                    // Set CSS height of #current-user-registration-info back to auto.\r\n                    $( '#outer-frame-id' ).css( 'height', 'auto' );\r\n\r\n                    // Standard for WP API, and just handy:\r\n                    $( document.body ).trigger( 'post-load' );\r\n\r\n                }\r\n            }); // END OF: $.ajax().\r\n\r\n        } // END OF: ajaxFunction().\r\n\r\n\r\n\r\n        // *********************  Other sample AJAX functions for save and input check functionality. ************************* //\r\n\r\n        //console.log( \"AJAX scripts reached.\" );\r\n\r\n        var $inputs = $( '#event-materials-table input' );\r\n        setSessionMats( $inputs );\r\n        bindKeyupHandler( $inputs );\r\n\r\n        // Save all input vals to sessionStorage.\r\n        function setSessionMats( $inputs ) {\r\n\r\n            var sessionMats = $inputs.serialize(); // Crude. Proof of concept. Do by input ID.\r\n\r\n            sessionStorage.setItem( 'sessionMats', sessionMats );\r\n            //console.log( \"sessionMats set to: \" + sessionStorage.getItem( 'sessionMats' ) + \"(setSessionMats)\");\r\n\r\n        }\r\n\r\n        //Handler for the input keyup event.  Fades the Save button in.\r\n        function bindKeyupHandler( $inputs ) {\r\n\r\n            //var $inputs = $( '#event-materials-table input' );\r\n\r\n            // Ensure a clean slate:\r\n            $inputs.off( 'keyup', '.event_materials' );\r\n            //console.log(\"Keyup unbound from \" + $inputs + \"(bindKeyupHandler)\" );\r\n            // $inputs.removeClass( 'listening' );\r\n\r\n            // Bind the handler:\r\n            $inputs.keyup( function( keycode ) {\r\n\r\n                if ( keycode !== 9 ) {\r\n\r\n                    compareMatsToSession( $inputs );\r\n\r\n                    // Check for the 'ready' class that bindSaveAjax adds to prevent re-binding:\r\n                    /* OLD, NO COMPARISON TO SAVED MATERIALS:\r\n                    if( !$( '#event-materials-save a.button' ).hasClass( 'ready' ) ) {\r\n                        bindSaveAjax();\r\n                    }\r\n                    */\r\n\r\n                }\r\n\r\n            } );\r\n            //console.log(\"Keyup bound to \" + $inputs + \"(bindKeyupHandler)\");\r\n\r\n            $inputs.addClass( 'listening' );\r\n\r\n        }\r\n\r\n        function compareMatsToSession( $inputs ) {\r\n\r\n            var currentMats = $inputs.parents( 'table' ).first().find( 'input' );\r\n            currentMats = currentMats.serialize();\r\n\r\n            var sessionMats = sessionStorage.getItem( 'sessionMats' );\r\n\r\n            var $button = $( $inputs ).parents( '.inside' ).first().find( '#event-materials-save a.button' );\r\n\r\n            //console.log( \"compareMatsToSession ran on \" + $inputs );\r\n\r\n            if ( currentMats === sessionMats ) {\r\n                unbindSaveAjax( $button );\r\n                //console.log(\"currentMats = sessionMats. Button unbound. (compareMatsToSession)\");\r\n\r\n            } else {\r\n                bindSaveAjax( $button );\r\n                //console.log(\"currentMats != sessionMats. Button bound. (compareMatsToSession)\");\r\n                //console.log( \"currentMats = \" + currentMats );\r\n                //console.log( \"sessionMats = \" + sessionMats );\r\n\r\n            }\r\n        }\r\n\r\n        // Handler-binder for Save button:\r\n        function bindSaveAjax( $button ) {\r\n\r\n            // Add 'ready' class to track whether the event has been bound.\r\n            $button.addClass( 'ready' ).attr( 'href', '#' );\r\n\r\n            // Ensure a clean slate:\r\n            $button.off( 'click' );\r\n            //console.log(\"Button unbound. (bindSaveAjax)\");\r\n\r\n            // Bind the handler:\r\n            $button.click( function( event ) {\r\n\r\n                event.preventDefault();\r\n\r\n                var $table = $( this ).parents( '.inside' ).first().find( 'table' );\r\n\r\n                // Run the Ajax call:\r\n                updateEventMats( $table );\r\n\r\n            });\r\n\r\n            //console.log(\"Button bound (bindSaveAjax).\");\r\n        }\r\n\r\n        function unbindSaveAjax( $button ) {\r\n            // Unbind the Save button and remove the 'ready' class:\r\n            $button.removeClass( 'ready' ).removeAttr('href').off( 'click' );\r\n            //console.log( \"Button unbound (unbindSaveAjax)\" );\r\n        }\r\n\r\n        // Define the ajax function:\r\n        function updateEventMats( $table ) {\r\n\r\n            //console.log(\"AJAX call triggered! (updateEventMats)\");\r\n\r\n            var materials = $( $table ).find( 'input' ).serialize();\r\n            //console.log( materials );\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: ajaxurl, //  WORKS.\r\n                cache: false,\r\n                data:\r\n                {\r\n                        action: 'ce_admin', // The wp_ajax_{action} to hook the callback function.\r\n                        ajax_nonce: ce_admin_ajax_data.ajax_nonce, // WORKS.\r\n                        event_materials: materials  // POST the Obj. WORKS!\r\n                },\r\n\r\n                beforeSend: function() {\r\n                    //console.log();\r\n                    $( '#event-materials-save-result span' ).fadeOut( 'fast' );\r\n\r\n                },\r\n\r\n                success: function( result, status, jqXHR ) {\r\n\r\n                    // Display the message from the server:\r\n                    $('#event-materials-save-result span').html( result ).fadeIn( 'fast' );\r\n\r\n                    // Unbind the Save button and remove the 'ready' class:\r\n                    $( '#event-materials #event-materials-save a.button' ).removeClass( 'ready' ).removeAttr('href').off( 'click' );\r\n\r\n                    // Crude. Proof of concept for saved state vs. current state.\r\n                    // TODO: Compare by input ID.\r\n                    setSessionMats( $table );\r\n\r\n                    // Trigger the post-load event for WP API:\r\n                    $( document.body ).trigger( 'post-load' );\r\n\r\n                },\r\n\r\n                error: function(jqXHR, status, error) {\r\n\r\n                    $( '#event-materials-save-result span' ).html( \"Sorry, unable to save.\" ).fadeIn( 'fast' );\r\n\r\n                    //console.log( \"jqXHR was: \" + jqXHR );\r\n                    //console.log( \"Status returned was: \" + status ); // error\r\n                    //console.log( \"Error thrown was: \" + error );     // bad request\r\n                }\r\n\r\n            }); // END OF: $.ajax().\r\n\r\n        }\r\n\r\n\r\n    }); // END OF: $( document ).ready( function() {\r\n\r\n})(jQuery);\r\n","/**\r\n * JS for: admin/module/views/view-name.php.\r\n *\r\n * @link       http://example.com\r\n * @since      1.0.0\r\n *\r\n * @package    plugin-name\r\n * @subpackage plugin-name/admin/module/js\r\n */\r\n\r\n (function( $ ) {\r\n\t'use strict';\r\n\r\n    $(document).ready( function() {\r\n        console.log( \"Settings view-name.js loaded.\" );\r\n\r\n        // Do the thing.\r\n\r\n    } ); // END: document.ready\r\n\r\n})( jQuery );\r\n","/**\r\n * JS for: admin/module/views/view-name.php.\r\n *\r\n * @link       http://example.com\r\n * @since      1.0.0\r\n *\r\n * @package    plugin-name\r\n * @subpackage plugin-name/admin/module/js\r\n */\r\n\r\n (function( $ ) {\r\n\t'use strict';\r\n\r\n    $(document).ready( function() {\r\n        console.log( \"Module's view-name.js loaded.\" );\r\n\r\n        // Do the thing.\r\n\r\n    } ); // END: document.ready\r\n\r\n})( jQuery );\r\n"]}